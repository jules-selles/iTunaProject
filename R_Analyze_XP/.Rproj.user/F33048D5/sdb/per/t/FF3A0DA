{
    "contents" : "##### Analyse statistiques des Résultats expérimentaux OTree ####\n####################################################\n#### Selles Jules ##### \n#### V.1          #####\n#### 12/16        #####\n##--------------------------------------------------\n\n## Path\n\ndir.data           <- \"C:/Users/jselles/Dropbox/These/These_Ifremer/Documents_Travail/Modele_XP/\"\ndir.script         <- \"Xp_protocole/R_scripts/\" \ndir.xp             <- \"demo_data/\"\ndo.save=TRUE\n\n## Packages/functions \n\nlibrary(gridExtra)\nlibrary(grid)\nlibrary(ggplot2)\nlibrary(lattice)\nrequire(reshape2)\n\n\n## get Profit, schaefer etc. functions \nsource(paste(dir.data,dir.script,\"Xp_calculus.R\",sep=\"\"))\n\n## get AERME data frame \nsource(paste(dir.data,dir.script,\"Get_Raw_Data_demoAERME.R\",sep=\"\"))\n\n## save plot \ndo.save=TRUE\npath.fig= paste(dir.data,dir.xp,sep=\"\")\n\n\n##################################\"\"\"\n## data frame by treatment & phase\nAERME_XP=NULL\nAERME_XP=as.data.frame(nb_xp[[1]])\n\nfor (i in 2 : 6){\n  AERME_XP=rbind(AERME_XP,as.data.frame(nb_xp[[i]]))\n  \n}\n\nXP_T0_p1 = AERME_XP[c(which(AERME_XP$treatment=='T0'),which(AERME_XP$phase=='p1')),]\nXP_T0_p2 = AERME_XP[c(which(AERME_XP$treatment=='T0'),which(AERME_XP$phase=='p2')),]\nXP_T1_p1 = AERME_XP[c(which(AERME_XP$treatment=='T1'),which(AERME_XP$phase=='p1')),]\nXP_T1_p2 = AERME_XP[c(which(AERME_XP$treatment=='T1'),which(AERME_XP$phase=='p2')),]\nXP_T2_p1 = AERME_XP[c(which(AERME_XP$treatment=='T1'),which(AERME_XP$phase=='p1')),]\nXP_T2_p2 = AERME_XP[c(which(AERME_XP$treatment=='T2'),which(AERME_XP$phase=='p2')),]\n\nXP_T0 = AERME_XP[which(AERME_XP$treatment=='T0'),]\nXP_T1 = AERME_XP[which(AERME_XP$treatment=='T1'),]\nXP_T2 = AERME_XP[which(AERME_XP$treatment=='T2'),]\n\n\nXP_p1 = AERME_XP[which(AERME_XP$phase=='p1'),]\nXP_p2 = AERME_XP[which(AERME_XP$phase=='p2'),]\n\n\n##---------------------\n##---------------------\n## GEE analysis \n\n## variables d'intéret deviation optimum // efficacité globale  // sous et sur exploitation\n\n\n\n\n\n\n\n\n############################################\n## plot by treatment \n\nnb_xp=list(XP_T0=XP_T0,XP_T1=XP_T1,XP_T2=XP_T2)\n\n\n## mean decision  by round for all phase\n\nfor (i in 1 : 3){\n  \n  nb_xp[[i]]$meancatch_T=NA\n  nb_xp[[i]]$meancatchpledge_T=NA\n  nb_xp[[i]]$meanprofit_T=NA\n  nb_xp[[i]]$sdcatch_T=NA\n  nb_xp[[i]]$sdcatchpledge_T=NA\n  nb_xp[[i]]$sdprofit_T=NA\n  nb_xp[[i]]$meanTotalcatch_T=NA\n  nb_xp[[i]]$meanTotalprofit_T=NA\n  nb_xp[[i]]$sdTotalcatch_T=NA\n  nb_xp[[i]]$sdTotalprofit_T=NA\n  \n  nb_xp[[i]]$meanoptProfDev_T=NA\n  nb_xp[[i]]$sdoptProfDev_T=NA\n  \n  nb_xp[[i]]$meanstateExploitation_T=NA\n  nb_xp[[i]]$sdstateExploitation_T=NA\n\n  nb_xp[[i]]$meanbiomass_T=NA\n  nb_xp[[i]]$sdbiomass_T=NA\n  \n  for (j in 1: length(nb_xp[[i]]$player_profit)){\n    \n    nb_xp[[i]]$meancatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$player_catchchoice[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meancatchpledge_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$player_catchpledge[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meanprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$player_profit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$sdcatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$player_catchchoice[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdcatchpledge_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$player_catchpledge[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$player_profit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$meanTotalcatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_totalcatch[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meanTotalprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_totalprofit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$sdTotalcatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_totalcatch[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdTotalprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_totalprofit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    \n    nb_xp[[i]]$meanoptProfDev_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_optProfDev[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meanstateExploitation_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_stateExploitation[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$sdoptProfDev_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_optProfDev[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdstateExploitation_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_stateExploitation[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$meanbiomass_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_biomasse[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdbiomass_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_biomasse[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n  }\n\n  \n##---------------------\n## rearrange to plot with ggplot \ngg=melt(nb_xp[[i]],id=c('participant_roundnumber','participant_id','participant_code','participant_appname',\n                        'session_code','player_name', 'player_age', 'player_profession'))\n\n## mean profit by player\n  \n  P_meanprofit=ggplot(gg[which(gg$variable=='meanprofit_T'),], \n                      aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                          y=as.numeric(gg$value[which(gg$variable=='meanprofit_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meanprofit_T + nb_xp[[i]]$sdprofit_T, ymin= nb_xp[[i]]$meanprofit_T - nb_xp[[i]]$sdprofit_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n  P_meanprofit = P_meanprofit + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(-5,5)+\n    ylab(\"Mean Profit (UVM)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n\n## mean total profit\n  \n  P_meanTotalprofit=ggplot(gg[which(gg$variable=='meanTotalprofit_T'),], \n                      aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                          y=as.numeric(gg$value[which(gg$variable=='meanTotalprofit_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meanTotalprofit_T + nb_xp[[i]]$sdTotalprofit_T, ymin= nb_xp[[i]]$meanTotalprofit_T - nb_xp[[i]]$sdTotalprofit_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n  P_meanTotalprofit = P_meanTotalprofit + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(-5,5)+\n    ylab(\"Mean total Profit (UVM)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  \n## mean catch by player\n  \n  P_meancatch=ggplot(gg[which(gg$variable=='meancatch_T'),], \n                      aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                          y=as.numeric(gg$value[which(gg$variable=='meancatch_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meancatch_T + nb_xp[[i]]$sdcatch_T, ymin= nb_xp[[i]]$meancatch_T - nb_xp[[i]]$sdcatch_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n   P_meancatch = P_meancatch + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(0,15)+\n    ylab(\"Mean Catch (UVS)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n## mean total catch\n   \n   P_meanTotalcatch=ggplot(gg[which(gg$variable=='meanTotalcatch_T'),], \n                            aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                                y=as.numeric(gg$value[which(gg$variable=='meanTotalcatch_T')])))\n   \n   limits <- aes(ymax = nb_xp[[i]]$meanTotalcatch_T + nb_xp[[i]]$sdTotalcatch_T, ymin= nb_xp[[i]]$meanTotalcatch_T - nb_xp[[i]]$sdTotalcatch_T)\n   dodge <- position_dodge(width=0.6)\n   \n   \n   P_meanTotalcatch = P_meanTotalcatch + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n     xlim(0,15)+ylim(-5,15)+\n     ylab(\"Mean total Catch (UVS)\") + xlab(\"Round (Year)\") +\n     theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n   \n## mean harvest/Bmsy\n   \n   P_meanstateExploitation = ggplot(gg[which(gg$variable=='meanstateExploitation_T'),], \n                                      aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                                          y=(as.numeric(gg$value[which(gg$variable=='meanstateExploitation_T')]))))\n   \n   limits <- aes(ymax = nb_xp[[i]]$meanstateExploitation_T + nb_xp[[i]]$sdstateExploitation_T, ymin= nb_xp[[i]]$meanstateExploitation_T - nb_xp[[i]]$sdstateExploitation_T)\n   dodge <- position_dodge(width=0.6)\n   \n   P_meanstateExploitation = P_meanstateExploitation +  geom_point(size=1.8)+ geom_line() + geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n     ylab(\"Harvest / MSY \") + xlab(\"Round (Year)\") +  theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+\n     theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n\n   \n## Plot mean deviation from optimal path\n   \n   P_meanOptprofdev = ggplot(gg[which(gg$variable=='meanoptProfDev_T'),], \n                           aes(x=factor(as.numeric(gg$value[which(gg$variable=='subsession_round')])),\n                               y=(as.numeric(gg$value[which(gg$variable=='meanoptProfDev_T')]))))\n   \n   limits <- aes(ymax = (nb_xp[[i]]$meanoptProfDev_T + nb_xp[[i]]$sdoptProfDev_T), ymin= nb_xp[[i]]$meanoptProfDev_T - nb_xp[[i]]$sdoptProfDev_T)\n   dodge <- position_dodge(width=0.6)\n   \n   P_meanOptprofdev = P_meanOptprofdev + geom_bar(stat = \"identity\", position=dodge) +geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n     ylab(\"Deviation from optimal profit path \") + xlab(\"Round (Year)\") +\n     theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",\n                                                                                                     axis.title=element_text(size=8))\n   \n   \n   ## Plot mean biomass\n   \n   P_meanBiomass=ggplot(gg[which(gg$variable=='meanbiomass_T'),], \n                     aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                         y=as.numeric(gg$value[which(gg$variable=='meanbiomass_T')])))\n   \n   limits <- aes(ymax = (nb_xp[[i]]$meanbiomass_T + nb_xp[[i]]$sdbiomass_T), ymin= nb_xp[[i]]$meanbiomass_T - nb_xp[[i]]$sdbiomass_T)\n   dodge <- position_dodge(width=0.6)\n   \n   P_meanBiomass= P_meanBiomass + geom_point(size=1.8)+ geom_line() +geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n     ylab(\"Mean Biomass (UVS)\") + xlab(\"Round (Year)\") + ylim(0,30) + xlim(0,15) +\n     theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n   \n   ##-------------------------------------\n   ##------------------------------------\n   \n   if (do.save==TRUE){jpeg(filename=paste(path.fig,\"T\",substr(names(nb_xp)[i], 5, 5),\".jpg\",sep=\"\"),\n                           width = 2500, height = 2500,res = 300)}\n   \n   grid.arrange(P_meancatch,P_meanprofit,P_meanTotalcatch, P_meanTotalprofit,\n                P_meanstateExploitation, P_meanOptprofdev,P_meanBiomass,\n                ncol=2, top = paste(\"T\",substr(names(nb_xp)[i], 5, 5),sep=\"\"))\n   \n   if (do.save==TRUE){dev.off()}\n   \n   \n   ##-------------------------------------\n   ##------------------------------------\n   print(paste(names(nb_xp)[i],'Efficacité moyenne: ',mean(nb_xp[[i]]$group_efficiency,na.rm=T),sep=\"\"))\n   print(\"#--------------------------------------------------------------------------#\")\n   print(paste(names(nb_xp)[i],'Deviation Moyenne: ',mean(nb_xp[[i]]$meanoptProfDev_T,na.rm=T),sep=\"\"))\n   print(\"#--------------------------------------------------------------------------#\")\n   print(\"############################################################################\")\n   print(\"#--------------------------------------------------------------------------#\")\n   \n   \n   \n}\n\n\n\n############################################\n## plot by phase\n\nnb_xp=list(XP_p1=XP_p1,XP_p2=XP_p2)\n\n\n## mean decision  by round for all phase\n\nfor (i in 1 : 2){\n  \n  nb_xp[[i]]$meancatch_T=NA\n  nb_xp[[i]]$meancatchpledge_T=NA\n  nb_xp[[i]]$meanprofit_T=NA\n  nb_xp[[i]]$sdcatch_T=NA\n  nb_xp[[i]]$sdcatchpledge_T=NA\n  nb_xp[[i]]$sdprofit_T=NA\n  nb_xp[[i]]$meanTotalcatch_T=NA\n  nb_xp[[i]]$meanTotalprofit_T=NA\n  nb_xp[[i]]$sdTotalcatch_T=NA\n  nb_xp[[i]]$sdTotalprofit_T=NA\n  \n  nb_xp[[i]]$meanoptProfDev_T=NA\n  nb_xp[[i]]$sdoptProfDev_T=NA\n  \n  nb_xp[[i]]$meanstateExploitation_T=NA\n  nb_xp[[i]]$sdstateExploitation_T=NA\n  \n  nb_xp[[i]]$meanbiomass_T=NA\n  nb_xp[[i]]$sdbiomass_T=NA\n  \n  for (j in 1: length(nb_xp[[i]]$player_profit)){\n    \n    nb_xp[[i]]$meancatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$player_catchchoice[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meancatchpledge_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$player_catchpledge[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meanprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$player_profit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$sdcatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$player_catchchoice[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdcatchpledge_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$player_catchpledge[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$player_profit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$meanTotalcatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_totalcatch[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meanTotalprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_totalprofit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$sdTotalcatch_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_totalcatch[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdTotalprofit_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_totalprofit[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    \n    nb_xp[[i]]$meanoptProfDev_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_optProfDev[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$meanstateExploitation_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_stateExploitation[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$sdoptProfDev_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_optProfDev[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdstateExploitation_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_stateExploitation[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n    nb_xp[[i]]$meanbiomass_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = mean(nb_xp[[i]]$group_biomasse[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    nb_xp[[i]]$sdbiomass_T[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])] = sd(nb_xp[[i]]$group_biomasse[which(nb_xp[[i]]$subsession_round==nb_xp[[i]]$subsession_round[j])],na.rm=TRUE)\n    \n  }\n  \n  \n  ##---------------------\n  ## rearrange to plot with ggplot \n  gg=melt(nb_xp[[i]],id=c('participant_roundnumber','participant_id','participant_code','participant_appname',\n                          'session_code','player_name', 'player_age', 'player_profession'))\n  \n  ## mean profit by player\n  \n  P_meanprofit=ggplot(gg[which(gg$variable=='meanprofit_T'),], \n                      aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                          y=as.numeric(gg$value[which(gg$variable=='meanprofit_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meanprofit_T + nb_xp[[i]]$sdprofit_T, ymin= nb_xp[[i]]$meanprofit_T - nb_xp[[i]]$sdprofit_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n  P_meanprofit = P_meanprofit + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(-5,5)+\n    ylab(\"Mean Profit (UVM)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  ## mean total profit\n  \n  P_meanTotalprofit=ggplot(gg[which(gg$variable=='meanTotalprofit_T'),], \n                           aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                               y=as.numeric(gg$value[which(gg$variable=='meanTotalprofit_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meanTotalprofit_T + nb_xp[[i]]$sdTotalprofit_T, ymin= nb_xp[[i]]$meanTotalprofit_T - nb_xp[[i]]$sdTotalprofit_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n  P_meanTotalprofit = P_meanTotalprofit + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(-5,5)+\n    ylab(\"Mean total Profit (UVM)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  \n  ## mean catch by player\n  \n  P_meancatch=ggplot(gg[which(gg$variable=='meancatch_T'),], \n                     aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                         y=as.numeric(gg$value[which(gg$variable=='meancatch_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meancatch_T + nb_xp[[i]]$sdcatch_T, ymin= nb_xp[[i]]$meancatch_T - nb_xp[[i]]$sdcatch_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n  P_meancatch = P_meancatch + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(0,15)+\n    ylab(\"Mean Catch (UVS)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  ## mean total catch\n  \n  P_meanTotalcatch=ggplot(gg[which(gg$variable=='meanTotalcatch_T'),], \n                          aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                              y=as.numeric(gg$value[which(gg$variable=='meanTotalcatch_T')])))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meanTotalcatch_T + nb_xp[[i]]$sdTotalcatch_T, ymin= nb_xp[[i]]$meanTotalcatch_T - nb_xp[[i]]$sdTotalcatch_T)\n  dodge <- position_dodge(width=0.6)\n  \n  \n  P_meanTotalcatch = P_meanTotalcatch + geom_point(size=1.8) + geom_line()+  geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    xlim(0,15)+ylim(-5,15)+\n    ylab(\"Mean total Catch (UVS)\") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  ## mean harvest/Bmsy\n  \n  P_meanstateExploitation = ggplot(gg[which(gg$variable=='meanstateExploitation_T'),], \n                                   aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                                       y=(as.numeric(gg$value[which(gg$variable=='meanstateExploitation_T')]))))\n  \n  limits <- aes(ymax = nb_xp[[i]]$meanstateExploitation_T + nb_xp[[i]]$sdstateExploitation_T, ymin= nb_xp[[i]]$meanstateExploitation_T - nb_xp[[i]]$sdstateExploitation_T)\n  dodge <- position_dodge(width=0.6)\n  \n  P_meanstateExploitation = P_meanstateExploitation +  geom_point(size=1.8)+ geom_line() + geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    ylab(\"Harvest / MSY \") + xlab(\"Round (Year)\") +  theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+\n    theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  \n  ## Plot mean deviation from optimal path\n  \n  P_meanOptprofdev = ggplot(gg[which(gg$variable=='meanoptProfDev_T'),], \n                            aes(x=factor(as.numeric(gg$value[which(gg$variable=='subsession_round')])),\n                                y=(as.numeric(gg$value[which(gg$variable=='meanoptProfDev_T')]))))\n  \n  limits <- aes(ymax = (nb_xp[[i]]$meanoptProfDev_T + nb_xp[[i]]$sdoptProfDev_T), ymin= nb_xp[[i]]$meanoptProfDev_T - nb_xp[[i]]$sdoptProfDev_T)\n  dodge <- position_dodge(width=0.6)\n  \n  P_meanOptprofdev = P_meanOptprofdev + geom_bar(stat = \"identity\", position=dodge) +geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    ylab(\"Deviation from optimal profit path \") + xlab(\"Round (Year)\") +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",\n                                                                                                    axis.title=element_text(size=8))\n  \n  \n  ## Plot mean biomass\n  \n  P_meanBiomass=ggplot(gg[which(gg$variable=='meanbiomass_T'),], \n                       aes(x=as.numeric(gg$value[which(gg$variable=='subsession_round')]),\n                           y=as.numeric(gg$value[which(gg$variable=='meanbiomass_T')])))\n  \n  limits <- aes(ymax = (nb_xp[[i]]$meanbiomass_T + nb_xp[[i]]$sdbiomass_T), ymin= nb_xp[[i]]$meanbiomass_T - nb_xp[[i]]$sdbiomass_T)\n  dodge <- position_dodge(width=0.6)\n  \n  P_meanBiomass= P_meanBiomass + geom_point(size=1.8)+ geom_line() +geom_errorbar(limits,position=dodge, width=0.2,size=0.8) +\n    ylab(\"Biomass (UVS)\") + xlab(\"Round (Year)\") + ylim(0,30) + xlim(0,15) +\n    theme_classic()+ theme(legend.text = element_text(colour=\"black\", size=10, face=\"bold\"))+ theme(legend.position=\"bottom\",axis.title=element_text(size=8))\n  \n  ##-------------------------------------\n  ##------------------------------------\n  \n  if (do.save==TRUE){jpeg(filename=paste(path.fig,\"Phase\",substr(names(nb_xp)[i], 5, 5),\".jpg\",sep=\"\"),\n                          width = 2500, height = 2500,res = 300)}\n  \n  grid.arrange(P_meancatch,P_meanprofit,P_meanTotalcatch, P_meanTotalprofit,\n               P_meanstateExploitation, P_meanOptprofdev,P_meanBiomass,\n               ncol=2, top = paste(\"Phase\",substr(names(nb_xp)[i], 5, 5),sep=\"\"))\n  \n  if (do.save==TRUE){dev.off()}\n  \n  \n  ##-------------------------------------\n  ##------------------------------------\n  print(paste(names(nb_xp)[i],'Efficacité moyenne: ',mean(nb_xp[[i]]$group_efficiency,na.rm=T),sep=\"\"))\n  print(\"#--------------------------------------------------------------------------#\")\n  print(paste(names(nb_xp)[i],'Deviation Moyenne: ',mean(nb_xp[[i]]$meanoptProfDev_T,na.rm=T),sep=\"\"))\n  print(\"#--------------------------------------------------------------------------#\")\n  print(\"############################################################################\")\n  print(\"#--------------------------------------------------------------------------#\")\n  \n  \n  \n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1481215264528.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3606865573",
    "id" : "FF3A0DA",
    "lastKnownWriteTime" : 1481543999,
    "path" : "C:/Users/jselles/Dropbox/These/These_Ifremer/Documents_Travail/Modele_XP/XP_protocole/R_scripts/Analysis_demoAERME.R",
    "project_path" : "Analysis_demoAERME.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}